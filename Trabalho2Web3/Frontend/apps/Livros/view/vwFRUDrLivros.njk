{% extends "templates/base.html" %}

{% block content %}
  <div x-data="livroForm()">
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active">{{title}}</li>
    </ol>
    <div class="row">
      <div class="col-12">

        <div class="card-header">
          {{tite}}

        </div>

        <div class="card-body">
          <div class="">

            {# <form @submit.prevent="submitForm"> #}
            <form>
              <div class="row">
          
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="nome">Livro ID</label>
                    <input type="text" class="form-control" id="livro_id" x-model="form.livro_id" x-bind:disabled="disabled">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="nome">Titulo</label>
                    <input type="text" class="form-control" id="titulo" x-model="form.titulo" x-bind:disabled="disabled">
                  </div>
                </div>
              </div>

              <div class="form-group col-md-6">
                <label for="preco">Preco</label>x
                <input type="number" class="form-control" id="preco" x-model="form.preco" x-bind:disabled="disabled">
              </div>

              <div class="col-md-3">
                  <div class="form-group">
                    <label for="data_publicacao">Data de publicacao</label>
                    <input type="date" class="form-control" id="data_publicacao" x-model="form.data_publicacao">
                  </div>
                </div>

                <div class="col-md-3">
                  <div class="form-group">
                    <label for="autor_id">Autor ID</label>
                    <input type="text" class="form-control" id="autor_id" x-model="form.autor_id" x-bind:disabled="disabled">
                  </div>
                </div>


                <button type="button" @click="updateForm()" class="btn btn-primary mt-4">Salvar</button>
                <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Desmatricular</button>
                <a href="/alunos/manutAlunos" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
              </form>

              <div class="mt-3">
                <template x-if="message">
                  <div :class="messageClass" x-text="message"></div>
                </template>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>

    <script>

      window.onload = function () {
        windowOnLoad();

        //@ Caso tenha dado erro no servidor frontEnd, ele será mostrado aqui.
        const localErro = "{{erro}}";
        if (localErro != "") {
          alert("[vwLivros|onload]Servidor retornou o erro:" + localErro);
        }
        $("#prontuario").focus();

      };

      function livroForm() {
        return {
          form: {
            id: "{{data.id}}",
            titulo: "{{data.titulo}}",
            preco: "{{data.preco}}",
            data_publicacao: "{{data.data_publicacao}}",
            deleted: false
          },
          message: '',
          messageClass: '',
          disabled: {{disabled}},

          async updateForm() {
            try {
              
              //console.log("Valor na página:", JSON.stringify(this.form))
              
              const response = await fetch('/livros/UpdateLivros', {
                method: 'POST',
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify(this.form)
              });

              const result = await response.json();
              if (result.status == "ok") {
                alert("Livro atualizado com suscesso");
              } else {
                const errorData = result.status;
                this.message = `Erro! Não foi possível atualizar os dados do Livro devido ao erro: ${errorData}`;
                this.messageClass = 'alert alert-danger';
              }
            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          async deleteForm() {
            try {
                console.log("Valor na página:", JSON.stringify(this.form.alunoid))
                const response = await fetch('/livros/DeleteLivros', {
                  method: 'POST',
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify(this.form)
                });

                const result = await response.json();
                if (result.status == "ok") {
                  alert("Livro desmatriculado com suscesso");
                  //@ Redireciona para a página de manutenção
                  window.location.href = "/livros/manutLivros";

                } else {
                  const errorData = result.status;
                  this.message = `Erro! Não foi possível atualizar os dados do autor devido ao erro: ${errorData}`;
                  this.messageClass = 'alert alert-danger';
                }

            } catch (error) {
              this.message = `Erro de conexão: ${error.message}`;
              this.messageClass = 'alert alert-danger';
            }
          },

          resetForm() {
            this.form = {
              id: "{{data.id}}",
              titulo: "{{data.titulo}}",
              preco: "{{data.preco}}",
              data_publicacao: "{{data.data_publicacao}}",
              deleted: false
            };
            this.message = false;
          }
        };
      }
    </script>

  {% endblock %}